properties:
  - name: dummy_tile_map
    static: true
    type: LabyrinthOfLore::WorldMap::TileMap
    init_with: "{}"
  - name: tile_map
    type: LabyrinthOfLore::WorldMap::TileMap&
    init_with: "get_dummy_tile_map()"
    constructor_arg: true
  - name: entities
    type: std::vector<LabyrinthOfLore::Entity::Base*>
    init_with: "{}"
    constructor_arg: true
functions:
  - name: get_dummy_tile_map
    type: LabyrinthOfLore::WorldMap::TileMap&
    static: true
    body: return dummy_tile_map;
  - name: process_step
    type: void
    body: |
      ALLEGRO_KEYBOARD_STATE keyboard_state;
      al_get_keyboard_state(&keyboard_state);

      //move forward if no wall in front of you
      if (al_key_down(&keyboard_state, ALLEGRO_KEY_W) || al_key_down(&keyboard_state, ALLEGRO_KEY_UP))
      {
         if(worldMap[int(posX + dirX * moveSpeed)][int(posY)] == false) posX += dirX * moveSpeed;
         if(worldMap[int(posX)][int(posY + dirY * moveSpeed)] == false) posY += dirY * moveSpeed;
      }
      //move backwards if no wall behind you
      if (al_key_down(&keyboard_state, ALLEGRO_KEY_S) || al_key_down(&keyboard_state, ALLEGRO_KEY_DOWN))
      {
         if(worldMap[int(posX - dirX * moveSpeed)][int(posY)] == false) posX -= dirX * moveSpeed;
         if(worldMap[int(posX)][int(posY - dirY * moveSpeed)] == false) posY -= dirY * moveSpeed;
      }

      // strafing
      if (al_key_down(&keyboard_state, ALLEGRO_KEY_A))
      {
         float dirX2 = -dirY;
         float dirY2 = dirX;
         if(worldMap[int(posX + dirX2 * moveSpeed)][int(posY)] == false) posX += dirX2 * moveSpeed;
         if(worldMap[int(posX)][int(posY + dirY2 * moveSpeed)] == false) posY += dirY2 * moveSpeed;
      }
      //move backwards if no wall behind you
      if (al_key_down(&keyboard_state, ALLEGRO_KEY_D))
      {
         float dirX2 = -dirY;
         float dirY2 = dirX;
         if(worldMap[int(posX - dirX2 * moveSpeed)][int(posY)] == false) posX -= dirX2 * moveSpeed;
         if(worldMap[int(posX)][int(posY - dirY2 * moveSpeed)] == false) posY -= dirY2 * moveSpeed;
      }

      return;
dependencies:
  - symbol: LabyrinthOfLore::WorldMap::TileMap
    headers: [ LabyrinthOfLore/WorldMap/TileMap.hpp ]
  - symbol: LabyrinthOfLore::WorldMap::TileMap&
    headers: [ LabyrinthOfLore/WorldMap/TileMap.hpp ]
  - symbol: std::vector<LabyrinthOfLore::Entity::Base*>
    headers: [ vector, LabyrinthOfLore/Entity/Base.hpp ]
