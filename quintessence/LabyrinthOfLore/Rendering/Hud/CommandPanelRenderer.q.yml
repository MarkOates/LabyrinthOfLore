properties:
  - name: font
    type: ALLEGRO_FONT*
    init_with: nullptr
    constructor_arg: true
  - name: command_panel
    type: LabyrinthOfLore::Hud::CommandPanel*
    init_with: nullptr
    constructor_arg: true
  - name: place
    type: allegro_flare::placement3d
    init_with: "allegro_flare::placement3d{}"
    constructor_arg: true
functions:
  - name: render
    type: void
    body: |
      if (!font) throw std::runtime_error("Cannot draw CommandPanelRenderer with a nullptr font");
      if (!command_panel) throw std::runtime_error("Cannot draw CommandPanelRenderer with a nullptr command_panel");

      place.start_transform();

      //al_draw_filled_rounded_rectangle(0, 0, place.size.x, place.size.y, 6, 6, al_color_name("red"));
      //for (unsigned i=0; i<)
      //{
      //}

      std::vector<std::pair<std::string, LabyrinthOfLore::Hud::command_mode_t>> modes_for_display = {
         { "[T]alk", LabyrinthOfLore::Hud::COMMAND_MODE_TALK, },
         { "[P]ickup", LabyrinthOfLore::Hud::COMMAND_MODE_PICKUP, },
         { "[L]look", LabyrinthOfLore::Hud::COMMAND_MODE_LOOK, },
         { "Attac[k]", LabyrinthOfLore::Hud::COMMAND_MODE_ATTACK, },
         { "[U]se", LabyrinthOfLore::Hud::COMMAND_MODE_USE, },
      };

      float top_bottom_padding = 30.0f;
      float center_y = place.size.y/2;
      float full_height = (place.size.y - top_bottom_padding);
      float vertical_element_spacing = full_height / modes_for_display.size();

      int i = 0;
      for (auto &mode_for_display : modes_for_display)
      {
         ALLEGRO_COLOR this_text_color = al_color_name("gray");
         std::string this_label = mode_for_display.first;
         LabyrinthOfLore::Hud::command_mode_t this_mode = mode_for_display.second;

         if (command_panel->get_current_mode() == this_mode) this_text_color = al_color_name("white");
         i++;
         al_draw_text(font, this_text_color, place.size.x/2, vertical_element_spacing * i, ALLEGRO_ALIGN_CENTRE, this_label.c_str());
      }

      place.restore_transform();
      return;
    body_dependency_symbols:
      - std::vector<LabyrinthOfLore::Hud::command_mode_t>
      - al_color_name
      - al_draw_rounded_rectangle
dependencies:
  - symbol: LabyrinthOfLore::Hud::CommandPanel*
    headers: [ LabyrinthOfLore/Hud/CommandPanel.hpp ]
  - symbol: ALLEGRO_FONT*
    headers: [ allegro5/allegro_font.h ]
  - symbol: al_color_name
    headers: [ allegro5/allegro_color.h ]
  - symbol: al_draw_rounded_rectangle
    headers: [ allegro5/allegro_primitives.h ]
  - symbol: allegro_flare::placement3d
    headers: [ allegro_flare/placement3d.h ]
  - symbol: x
    headers: [ y ]
  - symbol: std::vector<LabyrinthOfLore::Hud::command_mode_t>
    headers: [ vector, LabyrinthOfLore/Hud/CommandPanelModeEnum.hpp ]
