parent_classes:


  - class: AllegroFlare::Screens::Base
    scope: public
    init_with: LabyrinthOfLore::Gameplay::Screen::TYPE


properties:


  - name: event_emitter
    type: AllegroFlare::EventEmitter*
    init_with: nullptr
    constructor_arg: true

  - name: bitmap_bin
    type: AllegroFlare::BitmapBin*
    init_with: nullptr
    constructor_arg: true

  - name: font_bin
    type: AllegroFlare::FontBin*
    init_with: nullptr
    constructor_arg: true

  - name: model_bin
    type: AllegroFlare::ModelBin*
    init_with: nullptr
    constructor_arg: true

  - name: render_surface_width
    type: int
    init_with: 1920
    constructor_arg: true

  - name: render_surface_height
    type: int
    init_with: 1920
    constructor_arg: true

  - name: render_surface_display
    type: ALLEGRO_DISPLAY*
    init_with: nullptr
    constructor_arg: true

  - name: gameplay_element
    type: LabyrinthOfLore::Gameplay::Gameplay
    init_with: '{}'
    getter_ref: true

  - name: initialized
    type: bool
    init_with: false

  - name: TYPE
    type: char*
    init_with: '(char*)"LabyrinthOfLore/Gameplay/Screen"'
    static: true
    constexpr: true


functions:


  - name: set_event_emitter
    guards: [ (!initialized) ]
    parameters:
      - name: event_emitter
        type: AllegroFlare::EventEmitter*
        default_argument: nullptr
    body: |
      this->event_emitter = event_emitter;
      return;


  - name: set_bitmap_bin
    guards: [ (!initialized) ]
    parameters:
      - name: bitmap_bin
        type: AllegroFlare::BitmapBin*
        default_argument: nullptr
    body: |
      this->bitmap_bin = bitmap_bin;
      return;


  - name: set_font_bin
    guards: [ (!initialized) ]
    parameters:
      - name: font_bin
        type: AllegroFlare::FontBin*
        default_argument: nullptr
    body: |
      this->font_bin = font_bin;
      return;


  - name: set_model_bin
    guards: [ (!initialized) ]
    parameters:
      - name: model_bin
        type: AllegroFlare::ModelBin*
        default_argument: nullptr
    body: |
      this->model_bin = model_bin;
      return;


  - name: set_render_surface_width
    guards: [ (!initialized) ]
    parameters:
      - name: render_surface_width
        type: int
        default_argument: 0
    body: |
      this->render_surface_width = render_surface_width;
      return;


  - name: set_render_surface_height
    guards: [ (!initialized) ]
    parameters:
      - name: render_surface_height
        type: int
        default_argument: 0
    body: |
      this->render_surface_height = render_surface_height;
      return;


  - name: set_render_surface_display
    guards: [ (!initialized) ]
    parameters:
      - name: render_surface_display
        type: ALLEGRO_DISPLAY*
        default_argument: nullptr
    body: |
      this->render_surface_display = render_surface_display;
      return;


  - name: initialize
    guards:
      - (!initialized)
      - al_is_system_installed()
      - al_is_primitives_addon_initialized()
      - al_is_font_addon_initialized()
      - event_emitter
      - bitmap_bin
      - font_bin
      - model_bin
    body: |

      gameplay_element.set_bitmap_bin(bitmap_bin);
      gameplay_element.set_font_bin(font_bin);
      gameplay_element.set_render_surface_width(render_surface_width);
      gameplay_element.set_render_surface_height(render_surface_height);
      gameplay_element.set__display(render_surface_display);
      gameplay_element.initialize();

      gameplay_element.start_game(); // TODO: Move this to a better spot

      initialized = true;
      return;
    body_dependency_symbols:
      - al_is_primitives_addon_initialized


  - name: on_activate
    virtual: true
    override: true
    guards: [ initialized ]
    body: |
      //emit_event_to_update_input_hints_bar();
      //emit_show_and_size_input_hints_bar_event();
      return;


  - name: on_deactivate
    virtual: true
    override: true
    guards: [ initialized ]
    body: |
      //emit_hide_and_restore_size_input_hints_bar_event();
      return;


  - name: update
    body: |
      return;


  - name: render
    body: |
      return;


  - name: primary_timer_func
    virtual: true
    override: true
    guards: [ initialized ]
    body: |
      //update();
      //render();
      gameplay_element.process_timer_event();
      return;


  - name: virtual_control_button_up_func
    virtual: true
    override: true
    parameters:
      - name: player
        type: AllegroFlare::Player*
        default_argument: nullptr
      - name: virtual_controller
        type: AllegroFlare::VirtualControllers::Base*
        default_argument: nullptr
      - name: virtual_controller_button_num
        type: int
        default_argument: 0
      - name: is_repeat
        type: bool
        default_argument: false
    guards: [ initialized ]
    body: |
      // TODO: this function
      return;


  - name: virtual_control_button_down_func
    virtual: true
    override: true
    parameters:
      - name: player
        type: AllegroFlare::Player*
        default_argument: nullptr
      - name: virtual_controller
        type: AllegroFlare::VirtualControllers::Base*
        default_argument: nullptr
      - name: virtual_controller_button_num
        type: int
        default_argument: 0
      - name: is_repeat
        type: bool
        default_argument: false
    guards: [ initialized ]
    body: |
      // TODO: this function
      return;


  - name: virtual_control_axis_change_func
    virtual: true
    override: true
    parameters:
      - name: ev
        type: ALLEGRO_EVENT*
        default_argument: nullptr
    guards: [ initialized ]
    body: |
      // TODO: this function
      return;



dependencies:


  - symbol: ALLEGRO_DISPLAY
    headers: [ allegro5/allegro.h ]
  - symbol: ALLEGRO_EVENT
    headers: [ allegro5/allegro.h ]
  - symbol: AllegroFlare::Screens::Base
    headers: [ AllegroFlare/Screens/Base.hpp ]
  - symbol: AllegroFlare::BitmapBin
    headers: [ AllegroFlare/BitmapBin.hpp ]
  - symbol: AllegroFlare::EventEmitter
    headers: [ AllegroFlare/EventEmitter.hpp ]
  - symbol: AllegroFlare::FontBin
    headers: [ AllegroFlare/FontBin.hpp ]
  - symbol: AllegroFlare::ModelBin
    headers: [ AllegroFlare/ModelBin.hpp ]
  - symbol: al_is_primitives_addon_initialized
    headers: [ allegro5/allegro_primitives.h ]
  - symbol: AllegroFlare::Player
    headers: [ AllegroFlare/Player.hpp ]
  - symbol: AllegroFlare::VirtualControllers::Base
    headers: [ AllegroFlare/VirtualControllers/Base.hpp ]
  - symbol: LabyrinthOfLore::Gameplay::Gameplay
    headers: [ LabyrinthOfLore/Gameplay/Gameplay.hpp ]


