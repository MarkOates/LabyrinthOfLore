properties:
  - name: type
    type: thing_type_t
    init_with: THING_TYPE_UNDEFINED
    constructor_arg: true
    getter: true
  - name: article
    type: std::string
    init_with: "\"an\""
    constructor_arg: true
    getter: true
  - name: name
    type: std::string
    init_with: "\"unnamed thing\""
    constructor_arg: true
    getter: true
  - name: tile_atlas
    type: Tileo::TileAtlas*
    init_with: nullptr
    constructor_arg: true
    getter: true
  - name: tile_atlas_index_id
    type: int
    init_with: -1
    constructor_arg: true
    getter: true
  - name: weight
    type: int
    init_with: 1 
    constructor_arg: true
    getter: true
  - name: health
    type: int
    init_with: 1
    constructor_arg: true
    setter: true
    getter: true
  - name: mood
    type: std::string
    init_with: "\"\""
    constructor_arg: true
    setter: true
    getter: true
  - name: condition
    type: std::string
    init_with: "\"\""
    constructor_arg: true
    setter: true
    getter: true
functions:
  - name: infer_is_dead
    type: bool
    body: |
      return (health <= 0);
  - name: infer_short_decorated_name
    type: std::string
    body: |
      std::stringstream result;
      if (!article.empty()) result << article << " ";
      if (!name.empty()) result << name << " ";

      std::string result_str = result.str();
      if (result_str.size() > 0 && result_str[result_str.size()-1] == ' ') result_str.pop_back();

      return result_str;
    body_dependency_symbols:
      - std::stringstream
  - name: infer_decorated_name
    type: std::string
    body: |
      std::stringstream result;
      if (!article.empty()) result << article << " ";
      if (!mood.empty()) result << mood << " ";
      if (!condition.empty()) result << condition << " ";
      if (!name.empty()) result << name << " ";

      std::string result_str = result.str();
      if (result_str.size() > 0 && result_str[result_str.size()-1] == ' ') result_str.pop_back();

      return result_str;
    body_dependency_symbols:
      - std::stringstream


dependencies:


  - symbol: std::stringstream
    headers: [ sstream ]
  - symbol: Tileo::TileAtlas
    headers: [ Tileo/TileAtlas.hpp ]
  - symbol: thing_type_t
    headers: [ LabyrinthOfLoreGame/ItemIdEnums.hpp ]


