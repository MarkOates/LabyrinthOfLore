properties:
  - name: tile_map_data
    type: std::vector<std::vector<LabyrinthOfLore::WorldMap::Tile>>
    init_with: "{}"
    constructor_arg: true
functions:
  - name: validate_size_and_integrity
    private: true
    type: void
    body: |
      if (tile_map_data.size() == 0)
      {
         throw std::runtime_error("Attempting to load tilemap, but the passed tile_map_data is dimensionless");
      }

      int expected_size = tile_map_data[0].size();
      for (int i=0; i<tile_map_data.size(); i++)
      {
         if (tile_map_data[i].size() != expected_size)
         {
            throw std::runtime_error("Attempting to load tilemap, but the number of columns is uneven among all of the rows.");
         }
      }
  - name: build_tile_map
    type: LabyrinthOfLore::WorldMap::TileMap
    body: |
      validate_size_and_integrity();

      int width = tile_map_data[0].size();
      int height = tile_map_data.size();

      LabyrinthOfLore::WorldMap::TileMap result;
      result.resize(width, height);

      for (unsigned y=0; y<height; y++)
      {
         for (unsigned x=0; x<width; x++)
         {
            result.set_tile(x, y, tile_map_data[y][x]);
         }
      }

      return result;
    body_dependency_symbols:
      - LabyrinthOfLore::WorldMap::TileMap
dependencies:
  - symbol: LabyrinthOfLore::WorldMap::TileMap
    headers: [ LabyrinthOfLore/WorldMap/TileMap.hpp ]
  - symbol: std::vector<std::vector<LabyrinthOfLore::WorldMap::Tile>>
    headers: [ vector, LabyrinthOfLore/WorldMap/Tile.hpp ]
